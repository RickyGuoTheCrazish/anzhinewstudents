{"ast":null,"code":"var _jsxFileName = \"/Users/Richrad/Documents/anzhinewstudents/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport Content from \"./Content.js\";\nimport fetch from \"node-fetch\";\nimport 'whatwg-fetch';\nimport Autocomplete from \"./Autocomplete.js\";\n\nconst axios = require('axios');\n\nconst utsmajors = [\"A\", \"AcB\", \"C\", \"AdultEducation\"];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchGetData = event => {\n      event.preventDefault();\n      console.log(event.target.majorname.value + \" this is event major name\");\n      console.log(event.target.childstate.value + \" child state is\");\n      console.log(\"this state childstate is \" + this.state.childstate); //work\n      //192.168.1.104 as localhost address\n\n      fetch(\"http://192.168.1.104:5000/search/\" + event.target.childstate.value).then(res => res.json()).then(res => {\n        //element can be obatined through res[0].elementname\n        //since res is represented as array there\n        if (res.length == 0) {\n          console.log(\"no such data in database, check your input please\");\n        } else {\n          console.log(\"course array length is\" + res.length);\n        }\n\n        for (var i = 0; i < res.length; i++) {\n          //dont wanna alert jump out too many times :D\n          //show courses\n          alert(res[i].course); // but this can be used for testing ~\n\n          console.log(\"courses are:\" + res[i].course);\n        }\n\n        console.log(\"doing frontend fetching\");\n      }, // Note: it's important to handle errors here\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.axiosPostData = event => {\n      //  event.preventDefault(); is used to prevent frontend real actions\n      //  (in this case :to refresh itself automatically when changes are made)\n      event.preventDefault(); //this.setState({[event.target.name]:event.target.value});\n      //console.log(this.state.searchname);\n\n      axios.post('http://192.168.1.104:5000/test', {\n        studentname: this.state.studentname,\n        phonenumber: this.state.phonenumber\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      alert('A name was submitted: ' + this.state.studentname + '  phone number is' + this.state.phonenumber);\n    };\n\n    this.state = {\n      studentname: '',\n      phonenumber: '',\n      searchname: '',\n      majorname: '',\n      uniname: '',\n      childstate: ''\n    };\n    this.handleChange = this.handleChange.bind(this); //this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.axiosPostData = this.axiosPostData.bind(this);\n    this.fetchGetData = this.fetchGetData.bind(this);\n  }\n  /*\n  getFromChild = (value) => {\n      this.setState({childstate:value})\n  }*/\n  //Used to find specific value according to users' input\n  //Somehow ios cant send or retrieve info using fetch/axios\n\n\n  handleChange(event) {\n    //prevent may not needed?\n    //event.preventDefault();\n    //value: event.target.value\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  /*\n      handleSubmit(event) {\n          event.preventDefault();\n          //alert('A name was submitted: ' + this.state.studentname+ 'age is'+this.state.phonenumber);\n          alert(\"yiha\");\n      }\n  */\n\n\n  render() {\n    let header = '';\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.fetchGetData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"You want to search this major :\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"majorname\",\n      value: this.state.majorname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: utsmajors,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"getData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.axiosPostData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Enter your student name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"studentname\",\n      value: this.state.studentname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Enter your phone number:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phonenumber\",\n      value: this.state.phonenumber,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Click below to pop up \"), React.createElement(Popup, {\n      modal: true,\n      trigger: React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Click Me\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, close => React.createElement(Content, {\n      close: close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })));\n  }\n  /*\n  handleClick(){\n      window.open(\"/MyScreen\");\n  }\n   */\n\n\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n\nexport default App;","map":{"version":3,"sources":["/Users/Richrad/Documents/anzhinewstudents/client/src/App.js"],"names":["React","Component","Popup","Content","fetch","Autocomplete","axios","require","utsmajors","App","constructor","props","fetchGetData","event","preventDefault","console","log","target","majorname","value","childstate","state","then","res","json","length","i","alert","course","error","setState","isLoaded","axiosPostData","post","studentname","phonenumber","response","catch","searchname","uniname","handleChange","bind","name","render","header","close"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Popup from \"reactjs-popup\";\nimport Content from \"./Content.js\";\nimport fetch from \"node-fetch\";\nimport 'whatwg-fetch';\nimport Autocomplete from \"./Autocomplete.js\";\nconst axios = require('axios');\n\nconst utsmajors = [\"A\",\"AcB\",\"C\",\"AdultEducation\"];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            studentname: '',\n            phonenumber: '',\n            searchname: '',\n            majorname: '',\n            uniname: '',\n            childstate:''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        //this.handleSubmit = this.handleSubmit.bind(this);\n        this.axiosPostData = this.axiosPostData.bind(this);\n        this.fetchGetData = this.fetchGetData.bind(this);\n\n    }\n    /*\n    getFromChild = (value) => {\n        this.setState({childstate:value})\n    }*/\n    //Used to find specific value according to users' input\n    //Somehow ios cant send or retrieve info using fetch/axios\n    fetchGetData = (event) => {\n\n        event.preventDefault();\n        console.log(event.target.majorname.value+\" this is event major name\");\n        console.log(event.target.childstate.value+\" child state is\");\n        console.log(\"this state childstate is \"+ this.state.childstate);\n        //work\n        //192.168.1.104 as localhost address\n        fetch(\"http://192.168.1.104:5000/search/\" + event.target.childstate.value)\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    //element can be obatined through res[0].elementname\n                    //since res is represented as array there\n                    if(res.length == 0){\n                        console.log(\"no such data in database, check your input please\");\n                    }else{\n                        console.log(\"course array length is\"+res.length);\n\n                    }\n                    for (var i = 0; i < res.length; i++) {\n                        //dont wanna alert jump out too many times :D\n                        //show courses\n                        alert(res[i].course);// but this can be used for testing ~\n                        console.log(\"courses are:\" + res[i].course)\n                    }\n\n                    console.log(\"doing frontend fetching\");\n                },\n                // Note: it's important to handle errors here\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    };\n\n\n    axiosPostData = (event) => {\n        //  event.preventDefault(); is used to prevent frontend real actions\n        //  (in this case :to refresh itself automatically when changes are made)\n        event.preventDefault();\n        //this.setState({[event.target.name]:event.target.value});\n        //console.log(this.state.searchname);\n        axios.post('http://192.168.1.104:5000/test', {\n            studentname: this.state.studentname,\n            phonenumber: this.state.phonenumber,\n        })\n            .then(function (response) {\n                console.log(response);\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        alert('A name was submitted: ' + this.state.studentname + '  phone number is' + this.state.phonenumber);\n\n    }\n\n\n    handleChange(event) {\n        //prevent may not needed?\n        //event.preventDefault();\n        //value: event.target.value\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    /*\n        handleSubmit(event) {\n            event.preventDefault();\n            //alert('A name was submitted: ' + this.state.studentname+ 'age is'+this.state.phonenumber);\n            alert(\"yiha\");\n        }\n    */\n\n    render() {\n        let header = '';\n\n        return (\n\n            <div className=\"App\">\n                <form onSubmit={this.fetchGetData}>\n                    <label>You want to search this major :</label>\n                    <input\n                        type='text'\n                        name='majorname'\n                        value={this.state.majorname}\n                        onChange={this.handleChange}\n                    />\n                    <Autocomplete\n                        suggestions={utsmajors}\n                        onChange={this.handleChange}\n                    />\n                    <input type=\"submit\" value=\"getData\"/>\n\n                </form>\n\n                <form onSubmit={this.axiosPostData}>\n                    <label>Enter your student name:</label>\n                    <input\n                        type='text'\n                        name='studentname'\n                        value={this.state.studentname}\n                        onChange={this.handleChange}\n                    />\n                    <label>Enter your phone number:</label>\n                    <input\n                        type='text'\n                        name='phonenumber'\n                        value={this.state.phonenumber}\n                        onChange={this.handleChange}\n                    />\n                    <input type=\"submit\" value=\"Submit\"/>\n\n                </form>\n                <h1>Click below to pop up </h1>\n                <Popup modal trigger={<button>Click Me</button>}>\n                    {close => <Content close={close}/>}\n                </Popup>\n\n\n\n\n            </div>\n\n        )\n    }\n\n    /*\n    handleClick(){\n        window.open(\"/MyScreen\");\n    }\n     */\n\n\n}\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nexport default App"]},"metadata":{},"sourceType":"module"}