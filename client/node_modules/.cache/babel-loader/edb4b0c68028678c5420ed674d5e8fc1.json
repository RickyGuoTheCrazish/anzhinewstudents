{"ast":null,"code":"var _jsxFileName = \"/Users/Richrad/Documents/anzhinewstudents/client/src/Autocomplete.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class Autocomplete extends Component {\n  constructor(props) {\n    super(props); //console.log(this.props.name+\"props major name\");\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredSuggestions = suggestions.filter(suggestion => {\n        return suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1;\n      });\n      console.log(\"userinput\" + userInput);\n      console.log(\"suggestion\" + filteredSuggestions);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeSuggestion === 0) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion - 1\n        });\n      } else if (e.keyCode === 40) {\n        if (activeSuggestion - 1 === filteredSuggestions.length) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion + 1\n        });\n      }\n    };\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    if (this.showSuggestions && this.userInput) {\n      if (this.filteredSuggestions.length) {\n        {\n          this.filteredSuggestions.map((suggestion, index) => {\n            let className;\n\n            if (index === this.activeSuggestion) {\n              className = \"\"; //console.log(this.state.userInput+\"   hooo ya\");\n            } else {\n              console.log(\"oho~\");\n              console.log(\"121231\" + suggestion);\n            }\n          });\n        }\n      }\n    }\n\n    console.log(this.userInput);\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    var suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = React.createElement(\"ul\", {\n          className: \"suggestion\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, filteredSuggestions.map((suggestion, index) => {\n          let className;\n\n          if (index === activeSuggestion) {\n            className = \"\"; //console.log(this.state.userInput+\"   hooo ya\");\n          } else {\n            console.log(\"hooya\");\n            console.log(\"suggestion inside\" + suggestion);\n          }\n\n          return React.createElement(\"li\", {\n            key: suggestion,\n            onClick: onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, suggestion);\n        }));\n      } else {\n        suggestionsListComponent = React.createElement(\"div\", {\n          className: \"no-suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"please press the Load button then delete and re-enter university name\"));\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"search\",\n      name: \"majorname\",\n      size: \"34\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), suggestionsListComponent);\n  }\n\n}\nAutocomplete.propTypes = {\n  suggestions: PropTypes.instanceOf(Array)\n};\nAutocomplete.defaultProperty = {\n  suggestions: []\n};\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/Richrad/Documents/anzhinewstudents/client/src/Autocomplete.js"],"names":["React","Component","PropTypes","Autocomplete","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","console","log","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","length","bind","componentWillUpdate","nextProps","nextState","nextContext","map","index","className","render","suggestionsListComponent","propTypes","instanceOf","Array","defaultProperty"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class Autocomplete extends Component {\n    static propTypes = {\n        suggestions: PropTypes.instanceOf(Array)\n    };\n    static defaultProperty = {\n        suggestions: []\n    };\n    constructor(props) {\n        super(props);\n        //console.log(this.props.name+\"props major name\");\n\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: \"\"\n        };\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange = e => {\n\n        const { suggestions } = this.props;\n        const userInput = e.currentTarget.value;\n\n        const filteredSuggestions = suggestions.filter(\n            (suggestion) => {\n            return suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1;\n            }\n        );\n\n        console.log(\"userinput\"+userInput);console.log(\"suggestion\"+filteredSuggestions);\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions,\n            showSuggestions: true,\n            userInput: e.currentTarget.value\n        });\n    };\n\n    onClick = e => {\n\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: e.currentTarget.innerText\n        });\n    };\n    onKeyDown = e => {\n\n        const { activeSuggestion, filteredSuggestions } = this.state;\n\n        if (e.keyCode === 13) {\n            this.setState({\n                activeSuggestion: 0,\n                showSuggestions: false,\n                userInput: filteredSuggestions[activeSuggestion]\n            });\n        } else if (e.keyCode === 38) {\n            if (activeSuggestion === 0) {\n                return;\n            }\n\n            this.setState({ activeSuggestion: activeSuggestion - 1 });\n        } else if (e.keyCode === 40) {\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\n                return;\n            }\n\n            this.setState({ activeSuggestion: activeSuggestion + 1 });\n        }\n    };\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (this.showSuggestions && this.userInput) {\n            if (this.filteredSuggestions.length) {\n\n                        {this.filteredSuggestions.map((suggestion, index) => {\n                            let className;\n\n                            if (index === this.activeSuggestion) {\n                                className = \"\";\n                                //console.log(this.state.userInput+\"   hooo ya\");\n                            } else {\n                                console.log(\"oho~\");\n                                console.log(\"121231\" + suggestion)\n                            }\n\n                        })}\n\n\n            }\n\n\n        }   \n        console.log(this.userInput);\n    }\n\n\n\n    render() {\n        const {\n            onChange,\n            onClick,\n            onKeyDown,\n            state: {\n                activeSuggestion,\n                filteredSuggestions,\n                showSuggestions,\n                userInput\n            }\n        } = this;\n        var suggestionsListComponent;\n        if (showSuggestions && userInput) {\n            if (filteredSuggestions.length) {\n                suggestionsListComponent = (\n                    <ul className=\"suggestion\">\n                        {filteredSuggestions.map((suggestion, index) => {\n                            let className;\n\n                            if (index === activeSuggestion) {\n                                className = \"\";\n                                //console.log(this.state.userInput+\"   hooo ya\");\n                            }else{\n                                console.log(\"hooya\");\n                                console.log(\"suggestion inside\"+suggestion)\n                            }\n\n                            return (\n\n                                <li key={suggestion} onClick={onClick}>\n                                    {suggestion}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            } else {\n                suggestionsListComponent = (\n                    <div className=\"no-suggestions\">\n                        <em>please press the Load button then delete and re-enter university name</em>\n                    </div>\n                );\n            }\n        }\n\n        return (\n            <React.Fragment>\n                <input\n                    type=\"search\"\n                    name=\"majorname\"\n                    size = '34'\n                    onChange={onChange}\n                    onKeyDown={onKeyDown}\n                    value={userInput}\n                />\n                {suggestionsListComponent}\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}