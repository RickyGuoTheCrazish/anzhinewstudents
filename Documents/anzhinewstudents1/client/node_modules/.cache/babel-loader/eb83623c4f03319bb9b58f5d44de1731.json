{"ast":null,"code":"var _jsxFileName = \"/Users/Richrad/Documents/anzhinewstudents/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport Content from \"./Content.js\";\nimport fetch from \"node-fetch\";\nimport 'whatwg-fetch';\nimport Autocomplete from \"./Autocomplete.js\";\nimport AutocompleteC1 from \"./AutocompleteC1\";\nimport AutocompleteC2 from \"./AutocompleteC2\";\nimport AutocompleteC3 from \"./AutocompleteC3\";\nimport AutocompleteC4 from \"./AutocompleteC4\";\n\nconst axios = require('axios');\n\nconst utsmajors = [\"A\", \"AcB\", \"C\", \"Adult Education\", \"3A3\", \"ACCT3001\", \"ACCT3002\"];\nvar courselist = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchGetData = event => {\n      event.preventDefault();\n      console.log(event.target.majorname.value + \" major is\");\n      console.log(\"the state majorname is \" + this.state.majorname);\n      console.log(\"uni name is \" + this.state.uniname); //Also Note that majorname as a selected result that sent from auto complete\n      //can not be saved into state of App somehow\n      //192.168.1.104 as localhost address\n      //change database entry\n\n      fetch(\"http://192.168.1.106:5000/uni/\" + this.state.uniname).then(res => {\n        console.log(res);\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }); //change collection(major) entry\n\n      fetch(\"http://192.168.1.106:5000/search/\" + event.target.majorname.value).then(res => res.json()).then(res => {\n        //element can be obatined through res[0].elementname\n        //since res is represented as array there\n        if (res.length === 0) {\n          alert(\"No course found, please press button again or check your spelling\" + \"\\n\\nps: only capitalized university name available eg: USYD,UNSW,UTS\" + \"\\n\\npps: please select major name rather than enter in as full name\" + \"\\n\\nppps: re-press the button can solve90% issues or refresh page\");\n        } else {\n          console.log(\"course array length is\" + res.length);\n        }\n\n        for (var i = 0; i < res.length; i++) {\n          //dont wanna alert jump out too many times :D\n          //show courses\n          alert(res[i].course); // but this can be used for testing ~\n          //normally there should be only 1 array returned that has multiple elements inside\n\n          console.log(\"courses are:\" + res[i].course);\n          courselist = res[i].course;\n        }\n      }, // Note: it's important to handle errors here\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.axiosPostData = event => {\n      //  event.preventDefault(); is used to prevent frontend real actions\n      //  (in this case :to refresh itself automatically when changes are made)\n      event.preventDefault(); //this.setState({[event.target.name]:event.target.value});\n      //console.log(this.state.searchname);\n\n      axios.post('http://192.168.1.106:5000/test', {\n        studentname: this.state.studentname,\n        phonenumber: this.state.phonenumber\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      alert('A name was submitted: ' + this.state.studentname + '  phone number is' + this.state.phonenumber);\n    };\n\n    this.state = {\n      studentname: '',\n      phonenumber: '',\n      searchname: '',\n      majorname: '',\n      uniname: '',\n      course1: '',\n      course2: '',\n      course3: '',\n      course4: ''\n    };\n    this.handleChange = this.handleChange.bind(this); //this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.axiosPostData = this.axiosPostData.bind(this);\n    this.fetchGetData = this.fetchGetData.bind(this);\n  }\n  /*\n  getFromChild = (value) => {\n      this.setState({majorname:value})\n  }*/\n  //Used to find specific value according to users' input\n  //Somehow ios cant send or retrieve info using fetch/axios\n\n\n  handleChange(event) {\n    //prevent may not needed?\n    //event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  /*\n      handleSubmit(event) {\n          event.preventDefault();\n          //alert('A name was submitted: ' + this.state.studentname+ 'age is'+this.state.phonenumber);\n          alert(\"yiha\");\n      }\n  */\n\n\n  render() {\n    let header = '';\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.fetchGetData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"University Name :\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"uniname\",\n      value: this.state.uniname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: utsmajors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"getData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.axiosPostData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Enter your student name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"studentname\",\n      value: this.state.studentname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Enter your phone number:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phonenumber\",\n      value: this.state.phonenumber,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(AutocompleteC1, {\n      suggestions: courselist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(AutocompleteC2, {\n      suggestions: courselist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(AutocompleteC3, {\n      suggestions: courselist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(AutocompleteC4, {\n      suggestions: courselist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Click below to pop up \"), React.createElement(Popup, {\n      modal: true,\n      trigger: React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Click Me\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, close => React.createElement(Content, {\n      close: close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Richrad/Documents/anzhinewstudents/client/src/App.js"],"names":["React","Component","Popup","Content","fetch","Autocomplete","AutocompleteC1","AutocompleteC2","AutocompleteC3","AutocompleteC4","axios","require","utsmajors","courselist","App","constructor","props","fetchGetData","event","preventDefault","console","log","target","majorname","value","state","uniname","then","res","error","setState","isLoaded","json","length","alert","i","course","axiosPostData","post","studentname","phonenumber","response","catch","searchname","course1","course2","course3","course4","handleChange","bind","name","render","header","close"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC,GAAD,EAAK,KAAL,EAAW,GAAX,EAAe,iBAAf,EAAiC,KAAjC,EAAuC,UAAvC,EAAkD,UAAlD,CAAlB;AACA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AACxBc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyBnBC,YAzBmB,GAyBHC,KAAD,IAAW;AAEtBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBC,KAAvB,GAA6B,WAAzC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA2B,KAAKI,KAAL,CAAWF,SAAlD;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAgB,KAAKI,KAAL,CAAWC,OAAvC,EALsB,CAMtB;AACA;AACA;AAEA;;AAEAtB,MAAAA,KAAK,CAAC,mCAAkC,KAAKqB,KAAL,CAAWC,OAA9C,CAAL,CACKC,IADL,CACWC,GAAD,IAAQ;AACVR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,OAHL,EAGOC,KAAD,IAAW;AACT,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVF,UAAAA;AAFU,SAAd;AAIH,OARL,EAZsB,CAqBtB;;AACAzB,MAAAA,KAAK,CAAC,sCAAqCc,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBC,KAA7D,CAAL,CACKG,IADL,CACUC,GAAG,IAAIA,GAAG,CAACI,IAAJ,EADjB,EAEKL,IAFL,CAGSC,GAAD,IAAS;AACL;AACA;AACA,YAAGA,GAAG,CAACK,MAAJ,KAAe,CAAlB,EAAoB;AAChBC,UAAAA,KAAK,CAAC,sEACF,sEADE,GAEF,qEAFE,GAGF,mEAHC,CAAL;AAKH,SAND,MAMK;AACDd,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAyBO,GAAG,CAACK,MAAzC;AAEH;;AACD,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,GAAG,CAACK,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACjC;AACA;AACAD,UAAAA,KAAK,CAACN,GAAG,CAACO,CAAD,CAAH,CAAOC,MAAR,CAAL,CAHiC,CAGZ;AACrB;;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBO,GAAG,CAACO,CAAD,CAAH,CAAOC,MAApC;AACAvB,UAAAA,UAAU,GAAGe,GAAG,CAACO,CAAD,CAAH,CAAOC,MAApB;AACH;AACJ,OAxBT,EAyBQ;AACCP,MAAAA,KAAD,IAAW;AACP,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVF,UAAAA;AAFU,SAAd;AAIH,OA/BT;AAiCH,KAhFkB;;AAAA,SAmFnBQ,aAnFmB,GAmFFnB,KAAD,IAAW;AACvB;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN,GAHuB,CAIvB;AACA;;AACAT,MAAAA,KAAK,CAAC4B,IAAN,CAAW,gCAAX,EAA6C;AACzCC,QAAAA,WAAW,EAAE,KAAKd,KAAL,CAAWc,WADiB;AAEzCC,QAAAA,WAAW,EAAE,KAAKf,KAAL,CAAWe;AAFiB,OAA7C,EAKKb,IALL,CAKU,UAAUc,QAAV,EAAoB;AACtBrB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAZ;AACH,OAPL,EAQKC,KARL,CAQW,UAAUb,KAAV,EAAiB;AACpBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,OAVL;AAWAK,MAAAA,KAAK,CAAC,2BAA2B,KAAKT,KAAL,CAAWc,WAAtC,GAAoD,mBAApD,GAA0E,KAAKd,KAAL,CAAWe,WAAtF,CAAL;AACH,KArGkB;;AAEf,SAAKf,KAAL,GAAa;AACTc,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTG,MAAAA,UAAU,EAAE,EAHH;AAITpB,MAAAA,SAAS,EAAC,EAJD;AAKTG,MAAAA,OAAO,EAAE,EALA;AAMTkB,MAAAA,OAAO,EAAE,EANA;AAOTC,MAAAA,OAAO,EAAE,EAPA;AAQTC,MAAAA,OAAO,EAAE,EARA;AASTC,MAAAA,OAAO,EAAE;AATA,KAAb;AAWA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CAbe,CAcf;;AACA,SAAKZ,aAAL,GAAqB,KAAKA,aAAL,CAAmBY,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKhC,YAAL,GAAoB,KAAKA,YAAL,CAAkBgC,IAAlB,CAAuB,IAAvB,CAApB;AAEH;AACD;;;;AAIA;AACA;;;AAgFAD,EAAAA,YAAY,CAAC9B,KAAD,EAAQ;AAChB;AACA;AACA,SAAKY,QAAL,CAAc;AAAC,OAACZ,KAAK,CAACI,MAAN,CAAa4B,IAAd,GAAqBhC,KAAK,CAACI,MAAN,CAAaE;AAAnC,KAAd;AACH;AAED;;;;;;;;;AASA2B,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,GAAG,EAAb;AAEA,WAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKnC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,OAHtB;AAII,MAAA,QAAQ,EAAE,KAAKsB,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI,oBAAC,YAAD;AACI,MAAA,WAAW,EAAEpC,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAYI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ,EAiBI;AAAM,MAAA,QAAQ,EAAE,KAAKyB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWc,WAHtB;AAII,MAAA,QAAQ,EAAE,KAAKS,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCARJ,EASI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWe,WAHtB;AAII,MAAA,QAAQ,EAAE,KAAKQ,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAeI,oBAAC,cAAD;AACI,MAAA,WAAW,EAAEnC,UADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAkBI,oBAAC,cAAD;AACI,MAAA,WAAW,EAAEA,UADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,EAqBI,oBAAC,cAAD;AACI,MAAA,WAAW,EAAEA,UADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,EAwBI,oBAAC,cAAD;AACI,MAAA,WAAW,EAAEA,UADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBJ,EA2BI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,CAjBJ,EA+CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCA/CJ,EAgDI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKwC,KAAK,IAAI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd,CAhDJ,CAFJ;AA0DH;;AArLuB;;AAwL5B,eAAevC,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Popup from \"reactjs-popup\";\nimport Content from \"./Content.js\";\nimport fetch from \"node-fetch\";\nimport 'whatwg-fetch';\nimport Autocomplete from \"./Autocomplete.js\";\nimport AutocompleteC1 from \"./AutocompleteC1\";\nimport AutocompleteC2 from \"./AutocompleteC2\";\nimport AutocompleteC3 from \"./AutocompleteC3\";\nimport AutocompleteC4 from \"./AutocompleteC4\";\n\n\nconst axios = require('axios');\n\nconst utsmajors = [\"A\",\"AcB\",\"C\",\"Adult Education\",\"3A3\",\"ACCT3001\",\"ACCT3002\"];\nvar courselist = [];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            studentname: '',\n            phonenumber: '',\n            searchname: '',\n            majorname:'',\n            uniname: '',\n            course1: '',\n            course2: '',\n            course3: '',\n            course4: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        //this.handleSubmit = this.handleSubmit.bind(this);\n        this.axiosPostData = this.axiosPostData.bind(this);\n        this.fetchGetData = this.fetchGetData.bind(this);\n\n    }\n    /*\n    getFromChild = (value) => {\n        this.setState({majorname:value})\n    }*/\n    //Used to find specific value according to users' input\n    //Somehow ios cant send or retrieve info using fetch/axios\n    fetchGetData = (event) => {\n\n        event.preventDefault();\n        console.log(event.target.majorname.value+\" major is\");\n        console.log(\"the state majorname is \"+ this.state.majorname);\n        console.log(\"uni name is \"+ this.state.uniname);\n        //Also Note that majorname as a selected result that sent from auto complete\n        //can not be saved into state of App somehow\n        //192.168.1.104 as localhost address\n\n        //change database entry\n\n        fetch(\"http://192.168.1.106:5000/uni/\" +this.state.uniname)\n            .then((res) =>{\n                console.log(res);\n            },(error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            })\n        //change collection(major) entry\n        fetch(\"http://192.168.1.106:5000/search/\" +event.target.majorname.value)\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    //element can be obatined through res[0].elementname\n                    //since res is represented as array there\n                    if(res.length === 0){\n                        alert(\"No course found, please press button again or check your spelling\"+\n                            \"\\n\\nps: only capitalized university name available eg: USYD,UNSW,UTS\"+\n                            \"\\n\\npps: please select major name rather than enter in as full name\"+\n                            \"\\n\\nppps: re-press the button can solve90% issues or refresh page\");\n\n                    }else{\n                        console.log(\"course array length is\"+res.length);\n\n                    }\n                    for (var i = 0; i < res.length; i++) {\n                        //dont wanna alert jump out too many times :D\n                        //show courses\n                        alert(res[i].course);// but this can be used for testing ~\n                        //normally there should be only 1 array returned that has multiple elements inside\n                        console.log(\"courses are:\" + res[i].course);\n                        courselist = res[i].course;\n                    }\n                },\n                // Note: it's important to handle errors here\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    };\n\n\n    axiosPostData = (event) => {\n        //  event.preventDefault(); is used to prevent frontend real actions\n        //  (in this case :to refresh itself automatically when changes are made)\n        event.preventDefault();\n        //this.setState({[event.target.name]:event.target.value});\n        //console.log(this.state.searchname);\n        axios.post('http://192.168.1.106:5000/test', {\n            studentname: this.state.studentname,\n            phonenumber: this.state.phonenumber,\n\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        alert('A name was submitted: ' + this.state.studentname + '  phone number is' + this.state.phonenumber);\n    }\n\n\n    handleChange(event) {\n        //prevent may not needed?\n        //event.preventDefault();\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    /*\n        handleSubmit(event) {\n            event.preventDefault();\n            //alert('A name was submitted: ' + this.state.studentname+ 'age is'+this.state.phonenumber);\n            alert(\"yiha\");\n        }\n    */\n\n\n    render() {\n        let header = '';\n\n        return (\n\n            <div className=\"App\">\n                <form onSubmit={this.fetchGetData}>\n                    <label>University Name :</label>\n                    <input\n                        type='text'\n                        name='uniname'\n                        value={this.state.uniname}\n                        onChange={this.handleChange}\n                    />\n\n                    <Autocomplete\n                        suggestions={utsmajors}\n                    />\n                    <input type=\"submit\" value=\"getData\"/>\n\n                </form>\n\n                <form onSubmit={this.axiosPostData}>\n                    <label>Enter your student name:</label>\n                    <input\n                        type='text'\n                        name='studentname'\n                        value={this.state.studentname}\n                        onChange={this.handleChange}\n                    />\n                    <label>Enter your phone number:</label>\n                    <input\n                        type='text'\n                        name='phonenumber'\n                        value={this.state.phonenumber}\n                        onChange={this.handleChange}\n                    />\n                    <AutocompleteC1\n                        suggestions={courselist}\n                    />\n                    <AutocompleteC2\n                        suggestions={courselist}\n                    />\n                    <AutocompleteC3\n                        suggestions={courselist}\n                    />\n                    <AutocompleteC4\n                        suggestions={courselist}\n                    />\n                    <input type=\"submit\" value=\"Submit\"/>\n\n                </form>\n                <h1>Click below to pop up </h1>\n                <Popup modal trigger={<button>Click Me</button>}>\n                    {close => <Content close={close}/>}\n                </Popup>\n\n\n            </div>\n\n        )\n    }\n\n}\nexport default App"]},"metadata":{},"sourceType":"module"}