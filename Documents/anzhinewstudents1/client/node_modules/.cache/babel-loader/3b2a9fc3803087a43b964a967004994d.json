{"ast":null,"code":"var _jsxFileName = \"/Users/Richrad/Documents/anzhinewstudents/client/src/Autocomplete.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: ''\n    };\n  }\n\n  render() {\n    let suggestionsListComponent;\n\n    if (this.showSuggestions && this.userInput) {\n      if (this.filteredSuggestions.length) {\n        this.suggestionsListComponent = React.createElement(\"ul\", {\n          class: \"suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, this.filteredSuggestions.map((suggestion, index) => {\n          return React.createElement(\"li\", {\n            key: suggestion,\n            onClick: onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, suggestion);\n        }));\n      } else {\n        this.suggestionsListComponent = React.createElement(\"div\", {\n          class: \"no-suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"No suggestions!\"));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Hello from AutoComplete\");\n  }\n\n}\nAutocomplete.propTypes = {};\nAutocomplete.defaultProperty = {\n  suggestions: []\n};\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/Richrad/Documents/anzhinewstudents/client/src/Autocomplete.js"],"names":["React","Component","PropTypes","Autocomplete","constructor","props","state","activeSuggestion","filteredSuggestions","showSuggestions","userInput","render","suggestionsListComponent","length","map","suggestion","index","onClick","propTypes","defaultProperty","suggestions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAExCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,CADT;AAETC,MAAAA,mBAAmB,EAAE,EAFZ;AAGTC,MAAAA,eAAe,EAAE,KAHR;AAITC,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMH;;AAIDC,EAAAA,MAAM,GAAG;AACL,QAAIC,wBAAJ;;AACA,QAAI,KAAKH,eAAL,IAAwB,KAAKC,SAAjC,EAA4C;AACxC,UAAI,KAAKF,mBAAL,CAAyBK,MAA7B,EAAqC;AACjC,aAAKD,wBAAL,GACI;AAAI,UAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKJ,mBAAL,CAAyBM,GAAzB,CAA6B,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAEjD,iBACI;AAAK,YAAA,GAAG,EAAED,UAAV;AAAsB,YAAA,OAAO,EAAEE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKF,UADL,CADJ;AAKH,SAPA,CADL,CADJ;AAYH,OAbD,MAaO;AACH,aAAKH,wBAAL,GACI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ;AAKH;AACJ;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACH;;AAvCuC;AAA/BT,Y,CACFe,S,GAAY,E;AADVf,Y,CAWFgB,e,GAAgB;AACnBC,EAAAA,WAAW,EAAE;AADM,C;AA8B3B,eAAejB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Autocomplete extends Component {\n    static propTypes = {};\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: ''\n        };\n    }\n    static defaultProperty={\n        suggestions: []\n    };\n    render() {\n        let suggestionsListComponent;\n        if (this.showSuggestions && this.userInput) {\n            if (this.filteredSuggestions.length) {\n                this.suggestionsListComponent = (\n                    <ul class=\"suggestions\">\n                        {this.filteredSuggestions.map((suggestion, index) => {\n\n                            return (\n                                <li  key={suggestion} onClick={onClick}>\n                                    {suggestion}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            } else {\n                this.suggestionsListComponent = (\n                    <div class=\"no-suggestions\">\n                        <em>No suggestions!</em>\n                    </div>\n                );\n            }\n        }\n        return <div>Hello from AutoComplete</div>;\n    }\n}\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}