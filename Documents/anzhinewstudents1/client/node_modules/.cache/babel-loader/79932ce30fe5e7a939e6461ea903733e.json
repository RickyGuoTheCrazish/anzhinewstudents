{"ast":null,"code":"var _jsxFileName = \"/Users/Richrad/Documents/anzhinewstudents/client/src/Autocomplete.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeSuggestion === 0) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion - 1\n        });\n      } else if (e.keyCode === 40) {\n        if (activeSuggestion - 1 === filteredSuggestions.length) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion + 1\n        });\n      }\n    };\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: ''\n    };\n  }\n\n  render() {\n    let suggestionsListComponent;\n\n    if (this.showSuggestions && this.userInput) {\n      if (this.filteredSuggestions.length) {\n        suggestionsListComponent = React.createElement(\"ul\", {\n          class: \"suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, this.filteredSuggestions.map((suggestion, index) => {\n          return React.createElement(\"li\", {\n            key: suggestion,\n            onClick: this.onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, suggestion);\n        }));\n      } else {\n        suggestionsListComponent = React.createElement(\"div\", {\n          class: \"no-suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"No suggestions!\"));\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      value: this.userInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), suggestionsListComponent);\n  }\n\n}\nAutocomplete.propTypes = {};\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/Richrad/Documents/anzhinewstudents/client/src/Autocomplete.js"],"names":["React","Component","PropTypes","Autocomplete","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","length","render","suggestionsListComponent","map","index","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Autocomplete extends Component {\n\n    static propTypes = {};\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: ''\n        };\n    }\n;\n\n    onChange = (e) => {\n        const { suggestions } = this.props;\n        const userInput = e.currentTarget.value;\n\n        const filteredSuggestions = suggestions.filter(\n            (suggestion) =>\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions,\n            showSuggestions: true,\n            userInput: e.currentTarget.value\n        });\n    };\n    onClick = (e) => {\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: e.currentTarget.innerText\n        });\n    };\n    onKeyDown = e => {\n        const { activeSuggestion, filteredSuggestions } = this.state;\n\n        if (e.keyCode === 13) {\n            this.setState({\n                activeSuggestion: 0,\n                showSuggestions: false,\n                userInput: filteredSuggestions[activeSuggestion]\n            });\n        }\n        else if (e.keyCode === 38) {\n            if (activeSuggestion === 0) {\n                return;\n            }\n\n            this.setState({ activeSuggestion: activeSuggestion - 1 });\n        }\n        else if (e.keyCode === 40) {\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\n                return;\n            }\n\n            this.setState({ activeSuggestion: activeSuggestion + 1 });\n        }\n    };\n    render() {\n        let suggestionsListComponent;\n        if (this.showSuggestions && this.userInput) {\n            if (this.filteredSuggestions.length) {\n                suggestionsListComponent = (\n                    <ul class=\"suggestions\">\n                        {this.filteredSuggestions.map((suggestion, index) => {\n\n                            return (\n                                <li  key={suggestion} onClick={this.onClick}>\n                                    {suggestion}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            } else {\n                suggestionsListComponent = (\n                    <div class=\"no-suggestions\">\n                        <em>No suggestions!</em>\n                    </div>\n                );\n            }\n        }\n        return (\n\n            <React.Fragment>\n                <input\n                    type=\"text\"\n                    onChange={this.onChange}\n                    onKeyDown={this.onKeyDown}\n                    value={this.userInput}\n                />\n                {suggestionsListComponent}\n            </React.Fragment>\n        );\n    }\n}\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}