{"ast":null,"code":"var _jsxFileName = \"/Users/Richrad/Documents/anzhinewstudents/client/src/Autocomplete.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: ''\n    };\n  }\n\n  render() {\n    let suggestionsListComponent;\n\n    if (this.showSuggestions && userInput) {\n      if (this.filteredSuggestions.length) {\n        suggestionsListComponent = React.createElement(\"ul\", {\n          class: \"suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, this.filteredSuggestions.map((suggestion, index) => {\n          return React.createElement(\"li\", {\n            key: suggestion,\n            onClick: this.onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, suggestion);\n        }));\n      } else {\n        suggestionsListComponent = React.createElement(\"div\", {\n          class: \"no-suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"No suggestions!\"));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Hello from AutoComplete\");\n  }\n\n}\nAutocomplete.propTypes = {};\nAutocomplete.defaultProperty = {\n  suggestions: []\n};\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/Richrad/Documents/anzhinewstudents/client/src/Autocomplete.js"],"names":["React","Component","PropTypes","Autocomplete","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","state","render","suggestionsListComponent","length","map","index","propTypes","defaultProperty"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAGxCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,QAbmB,GAaPC,CAAD,IAAO;AACd,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKH,KAA7B;AACA,YAAMI,SAAS,GAAGF,CAAC,CAACG,aAAF,CAAgBC,KAAlC;AAEA,YAAMC,mBAAmB,GAAGJ,WAAW,CAACK,MAAZ,CACvBC,UAAD,IACIA,UAAU,CAACC,WAAX,GAAyBC,OAAzB,CAAiCP,SAAS,CAACM,WAAV,EAAjC,IAA4D,CAAC,CAFzC,CAA5B;AAKA,WAAKE,QAAL,CAAc;AACVC,QAAAA,gBAAgB,EAAE,CADR;AAEVN,QAAAA,mBAFU;AAGVO,QAAAA,eAAe,EAAE,IAHP;AAIVV,QAAAA,SAAS,EAAEF,CAAC,CAACG,aAAF,CAAgBC;AAJjB,OAAd;AAMH,KA5BkB;;AAAA,SA6BnBS,OA7BmB,GA6BRb,CAAD,IAAO;AACb,WAAKU,QAAL,CAAc;AACVC,QAAAA,gBAAgB,EAAE,CADR;AAEVN,QAAAA,mBAAmB,EAAE,EAFX;AAGVO,QAAAA,eAAe,EAAE,KAHP;AAIVV,QAAAA,SAAS,EAAEF,CAAC,CAACG,aAAF,CAAgBW;AAJjB,OAAd;AAMH,KApCkB;;AAEf,SAAKC,KAAL,GAAa;AACTJ,MAAAA,gBAAgB,EAAE,CADT;AAETN,MAAAA,mBAAmB,EAAE,EAFZ;AAGTO,MAAAA,eAAe,EAAE,KAHR;AAITV,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMH;;AA6BDc,EAAAA,MAAM,GAAG;AACL,QAAIC,wBAAJ;;AACA,QAAI,KAAKL,eAAL,IAAwBV,SAA5B,EAAuC;AACnC,UAAI,KAAKG,mBAAL,CAAyBa,MAA7B,EAAqC;AACjCD,QAAAA,wBAAwB,GACpB;AAAI,UAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKZ,mBAAL,CAAyBc,GAAzB,CAA6B,CAACZ,UAAD,EAAaa,KAAb,KAAuB;AAEjD,iBACI;AAAK,YAAA,GAAG,EAAEb,UAAV;AAAsB,YAAA,OAAO,EAAE,KAAKM,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKN,UADL,CADJ;AAKH,SAPA,CADL,CADJ;AAYH,OAbD,MAaO;AACHU,QAAAA,wBAAwB,GACpB;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ;AAKH;AACJ;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACH;;AAjEuC;AAA/BrB,Y,CAEFyB,S,GAAY,E;AAFVzB,Y,CAaF0B,e,GAAgB;AACnBrB,EAAAA,WAAW,EAAE;AADM,C;AAsD3B,eAAeL,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Autocomplete extends Component {\n\n    static propTypes = {};\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: ''\n        };\n    }\n\n    static defaultProperty={\n        suggestions: []\n    };\n    onChange = (e) => {\n        const { suggestions } = this.props;\n        const userInput = e.currentTarget.value;\n\n        const filteredSuggestions = suggestions.filter(\n            (suggestion) =>\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions,\n            showSuggestions: true,\n            userInput: e.currentTarget.value\n        });\n    };\n    onClick = (e) => {\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: e.currentTarget.innerText\n        });\n    };\n    render() {\n        let suggestionsListComponent;\n        if (this.showSuggestions && userInput) {\n            if (this.filteredSuggestions.length) {\n                suggestionsListComponent = (\n                    <ul class=\"suggestions\">\n                        {this.filteredSuggestions.map((suggestion, index) => {\n\n                            return (\n                                <li  key={suggestion} onClick={this.onClick}>\n                                    {suggestion}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            } else {\n                suggestionsListComponent = (\n                    <div class=\"no-suggestions\">\n                        <em>No suggestions!</em>\n                    </div>\n                );\n            }\n        }\n        return <div>Hello from AutoComplete</div>;\n    }\n}\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}