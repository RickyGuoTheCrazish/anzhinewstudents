{"ast":null,"code":"var _jsxFileName = \"/Users/Richrad/Documents/anzhinewstudents/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport Content from \"./Content.js\";\nimport fetch from \"node-fetch\";\nimport 'whatwg-fetch';\nimport Autocomplete from \"./Autocomplete.js\";\n\nconst axios = require('axios');\n\nconst utsmajors = [\"A\", \"AcB\", \"C\", \"Adult Education\"];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchGetData = event => {\n      event.preventDefault();\n      console.log(event.target.majorname.value + \" major is\");\n      console.log(\"the state majorname is \" + this.state.majorname);\n      console.log(\"uni name is \" + this.state.uniname); //Also Note that majorname as a selected result that sent from auto complete\n      //can not be saved into state of App somehow\n      //192.168.1.104 as localhost address\n      //change database entry\n\n      fetch(\"http://192.168.1.104:5000/uni/\" + this.state.uniname).then(res => res.json()).then(res => {\n        console.log(res);\n      }, // Note: it's important to handle errors here\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }); //change collection(major) entry\n\n      fetch(\"http://192.168.1.104:5000/search/\" + event.target.majorname.value).then(res => res.json()).then(res => {\n        //element can be obatined through res[0].elementname\n        //since res is represented as array there\n        if (res.length == 0) {\n          console.log(\"no such data in database, check your input please\");\n        } else {\n          console.log(\"course array length is\" + res.length);\n        }\n\n        for (var i = 0; i < res.length; i++) {\n          //dont wanna alert jump out too many times :D\n          //show courses\n          alert(res[i].course); // but this can be used for testing ~\n\n          console.log(\"courses are:\" + res[i].course);\n        }\n      }, // Note: it's important to handle errors here\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.axiosPostData = event => {\n      //  event.preventDefault(); is used to prevent frontend real actions\n      //  (in this case :to refresh itself automatically when changes are made)\n      event.preventDefault(); //this.setState({[event.target.name]:event.target.value});\n      //console.log(this.state.searchname);\n\n      axios.post('http://192.168.1.104:5000/test', {\n        studentname: this.state.studentname,\n        phonenumber: this.state.phonenumber\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      alert('A name was submitted: ' + this.state.studentname + '  phone number is' + this.state.phonenumber);\n    };\n\n    this.state = {\n      studentname: '',\n      phonenumber: '',\n      searchname: '',\n      majorname: '',\n      uniname: ''\n    };\n    this.handleChange = this.handleChange.bind(this); //this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.axiosPostData = this.axiosPostData.bind(this);\n    this.fetchGetData = this.fetchGetData.bind(this);\n  }\n  /*\n  getFromChild = (value) => {\n      this.setState({majorname:value})\n  }*/\n  //Used to find specific value according to users' input\n  //Somehow ios cant send or retrieve info using fetch/axios\n\n\n  handleChange(event) {\n    //prevent may not needed?\n    //event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  /*\n      handleSubmit(event) {\n          event.preventDefault();\n          //alert('A name was submitted: ' + this.state.studentname+ 'age is'+this.state.phonenumber);\n          alert(\"yiha\");\n      }\n  */\n\n\n  render() {\n    let header = ''; //const { selectedOption } = this.state.selectedOption;\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.fetchGetData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"University Name :\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"uniname\",\n      value: this.state.uniname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: utsmajors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"getData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.axiosPostData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Enter your student name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"studentname\",\n      value: this.state.studentname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Enter your phone number:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phonenumber\",\n      value: this.state.phonenumber,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Click below to pop up \"), React.createElement(Popup, {\n      modal: true,\n      trigger: React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Click Me\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, close => React.createElement(Content, {\n      close: close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })));\n  }\n  /*\n  handleClick(){\n      window.open(\"/MyScreen\");\n  }\n   */\n\n\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n\nexport default App;","map":{"version":3,"sources":["/Users/Richrad/Documents/anzhinewstudents/client/src/App.js"],"names":["React","Component","Popup","Content","fetch","Autocomplete","axios","require","utsmajors","App","constructor","props","fetchGetData","event","preventDefault","console","log","target","majorname","value","state","uniname","then","res","json","error","setState","isLoaded","length","i","alert","course","axiosPostData","post","studentname","phonenumber","response","catch","searchname","handleChange","bind","name","render","header","close"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Popup from \"reactjs-popup\";\nimport Content from \"./Content.js\";\nimport fetch from \"node-fetch\";\nimport 'whatwg-fetch';\nimport Autocomplete from \"./Autocomplete.js\";\n\n\nconst axios = require('axios');\n\nconst utsmajors = [\"A\",\"AcB\",\"C\",\"Adult Education\"];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            studentname: '',\n            phonenumber: '',\n            searchname: '',\n            majorname:'',\n            uniname: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        //this.handleSubmit = this.handleSubmit.bind(this);\n        this.axiosPostData = this.axiosPostData.bind(this);\n        this.fetchGetData = this.fetchGetData.bind(this);\n\n    }\n    /*\n    getFromChild = (value) => {\n        this.setState({majorname:value})\n    }*/\n    //Used to find specific value according to users' input\n    //Somehow ios cant send or retrieve info using fetch/axios\n    fetchGetData = (event) => {\n\n        event.preventDefault();\n        console.log(event.target.majorname.value+\" major is\");\n        console.log(\"the state majorname is \"+ this.state.majorname);\n        console.log(\"uni name is \"+ this.state.uniname);\n        //Also Note that majorname as a selected result that sent from auto complete\n        //can not be saved into state of App somehow\n        //192.168.1.104 as localhost address\n\n        //change database entry\n        fetch(\"http://192.168.1.104:5000/uni/\" +this.state.uniname)\n            .then(res => res.json())\n            .then((res) => {console.log(res)},\n                // Note: it's important to handle errors here\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n        //change collection(major) entry\n        fetch(\"http://192.168.1.104:5000/search/\" +event.target.majorname.value)\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    //element can be obatined through res[0].elementname\n                    //since res is represented as array there\n                    if(res.length == 0){\n                        console.log(\"no such data in database, check your input please\");\n                    }else{\n                        console.log(\"course array length is\"+res.length);\n\n                    }\n                    for (var i = 0; i < res.length; i++) {\n                        //dont wanna alert jump out too many times :D\n                        //show courses\n                        alert(res[i].course);// but this can be used for testing ~\n                        console.log(\"courses are:\" + res[i].course)\n                    }\n\n                },\n                // Note: it's important to handle errors here\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    };\n\n\n    axiosPostData = (event) => {\n        //  event.preventDefault(); is used to prevent frontend real actions\n        //  (in this case :to refresh itself automatically when changes are made)\n        event.preventDefault();\n        //this.setState({[event.target.name]:event.target.value});\n        //console.log(this.state.searchname);\n        axios.post('http://192.168.1.104:5000/test', {\n            studentname: this.state.studentname,\n            phonenumber: this.state.phonenumber,\n        })\n            .then(function (response) {\n                console.log(response);\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        alert('A name was submitted: ' + this.state.studentname + '  phone number is' + this.state.phonenumber);\n\n    }\n\n\n    handleChange(event) {\n        //prevent may not needed?\n        //event.preventDefault();\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    /*\n        handleSubmit(event) {\n            event.preventDefault();\n            //alert('A name was submitted: ' + this.state.studentname+ 'age is'+this.state.phonenumber);\n            alert(\"yiha\");\n        }\n    */\n\n\n    render() {\n        let header = '';\n        //const { selectedOption } = this.state.selectedOption;\n\n        return (\n\n            <div className=\"App\">\n                <form onSubmit={this.fetchGetData}>\n                    <label>University Name :</label>\n                    <input\n                        type='text'\n                        name='uniname'\n                        value={this.state.uniname}\n                        onChange={this.handleChange}\n                    />\n\n                    <Autocomplete\n                        suggestions={utsmajors}\n                    />\n                    <input type=\"submit\" value=\"getData\"/>\n\n                </form>\n\n                <form onSubmit={this.axiosPostData}>\n                    <label>Enter your student name:</label>\n                    <input\n                        type='text'\n                        name='studentname'\n                        value={this.state.studentname}\n                        onChange={this.handleChange}\n                    />\n                    <label>Enter your phone number:</label>\n                    <input\n                        type='text'\n                        name='phonenumber'\n                        value={this.state.phonenumber}\n                        onChange={this.handleChange}\n                    />\n                    <input type=\"submit\" value=\"Submit\"/>\n\n                </form>\n                <h1>Click below to pop up </h1>\n                <Popup modal trigger={<button>Click Me</button>}>\n                    {close => <Content close={close}/>}\n                </Popup>\n\n\n\n\n            </div>\n\n        )\n    }\n\n    /*\n    handleClick(){\n        window.open(\"/MyScreen\");\n    }\n     */\n\n\n}\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nexport default App"]},"metadata":{},"sourceType":"module"}