{"ast":null,"code":"var _jsxFileName = \"/Users/Richrad/Documents/anzhinewstudents/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport Content from \"./Content.js\";\nimport fetch from \"node-fetch\";\nimport 'whatwg-fetch';\nimport Autocomplete from \"./Autocomplete.js\";\nimport AutocompleteUni from \"./AutocompletUni.js\";\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst axios = require('axios');\n\nconst utsmajors = [\"A\", \"AcB\", \"C\", \"Adult Education\"];\nconst unis = [\"USYD\", \"UNSW\", \"UTS\"];\nconst Countries = [{\n  label: \"Albania\",\n  value: 355\n}, {\n  label: \"Argentina\",\n  value: 54\n}, {\n  label: \"Austria\",\n  value: 43\n}, {\n  label: \"Cocos Islands\",\n  value: 61\n}, {\n  label: \"Kuwait\",\n  value: 965\n}, {\n  label: \"Sweden\",\n  value: 46\n}, {\n  label: \"Venezuela\",\n  value: 58\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchGetData = event => {\n      event.preventDefault();\n      console.log(event.target.majorname.value + \" major is\");\n      console.log(event.target.uniname.value + \" uni is\");\n      console.log(\"this state majorname is \" + this.state.majorname);\n      console.log(\"major is in state of \" + this.state.majorname); //Also Note that majorname as a selected result that sent from auto complete\n      //can not be saved into state of App somehow\n      //192.168.1.104 as localhost address\n\n      fetch(\"http://192.168.1.104:5000/search/\" + event.target.majorname.value).then(res => res.json()).then(res => {\n        //element can be obatined through res[0].elementname\n        //since res is represented as array there\n        if (res.length == 0) {\n          console.log(\"no such data in database, check your input please\");\n        } else {\n          console.log(\"course array length is\" + res.length);\n        }\n\n        for (var i = 0; i < res.length; i++) {\n          //dont wanna alert jump out too many times :D\n          //show courses\n          alert(res[i].course); // but this can be used for testing ~\n\n          console.log(\"courses are:\" + res[i].course);\n        }\n\n        console.log(\"doing frontend fetching\");\n      }, // Note: it's important to handle errors here\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.axiosPostData = event => {\n      //  event.preventDefault(); is used to prevent frontend real actions\n      //  (in this case :to refresh itself automatically when changes are made)\n      event.preventDefault(); //this.setState({[event.target.name]:event.target.value});\n      //console.log(this.state.searchname);\n\n      axios.post('http://192.168.1.104:5000/test', {\n        studentname: this.state.studentname,\n        phonenumber: this.state.phonenumber\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      alert('A name was submitted: ' + this.state.studentname + '  phone number is' + this.state.phonenumber);\n    };\n\n    this.handleSelectChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(`Option selected:`, selectedOption);\n    };\n\n    this.state = {\n      studentname: '',\n      phonenumber: '',\n      searchname: '',\n      majorname: '',\n      uniname: '',\n      selectedOption: null\n    };\n    this.handleChange = this.handleChange.bind(this); //this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.axiosPostData = this.axiosPostData.bind(this);\n    this.fetchGetData = this.fetchGetData.bind(this);\n  }\n  /*\n  getFromChild = (value) => {\n      this.setState({majorname:value})\n  }*/\n  //Used to find specific value according to users' input\n  //Somehow ios cant send or retrieve info using fetch/axios\n\n\n  handleChange(event) {\n    //prevent may not needed?\n    //event.preventDefault();\n    //value: event.target.value\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  /*\n      handleSubmit(event) {\n          event.preventDefault();\n          //alert('A name was submitted: ' + this.state.studentname+ 'age is'+this.state.phonenumber);\n          alert(\"yiha\");\n      }\n  */\n\n\n  render() {\n    let header = ''; //const { selectedOption } = this.state.selectedOption;\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.fetchGetData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"You want to search this major :\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: Countries,\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(AutocompleteUni, {\n      suggestions: unis,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: utsmajors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"getData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.axiosPostData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Enter your student name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"studentname\",\n      value: this.state.studentname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Enter your phone number:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phonenumber\",\n      value: this.state.phonenumber,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Click below to pop up \"), React.createElement(Popup, {\n      modal: true,\n      trigger: React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Click Me\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, close => React.createElement(Content, {\n      close: close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })));\n  }\n  /*\n  handleClick(){\n      window.open(\"/MyScreen\");\n  }\n   */\n\n\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n\nexport default App;","map":{"version":3,"sources":["/Users/Richrad/Documents/anzhinewstudents/client/src/App.js"],"names":["React","Component","Popup","Content","fetch","Autocomplete","AutocompleteUni","Select","axios","require","utsmajors","unis","Countries","label","value","App","constructor","props","fetchGetData","event","preventDefault","console","log","target","majorname","uniname","state","then","res","json","length","i","alert","course","error","setState","isLoaded","axiosPostData","post","studentname","phonenumber","response","catch","handleSelectChange","selectedOption","searchname","handleChange","bind","name","render","header","close"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Popup from \"reactjs-popup\";\nimport Content from \"./Content.js\";\nimport fetch from \"node-fetch\";\nimport 'whatwg-fetch';\nimport Autocomplete from \"./Autocomplete.js\";\nimport AutocompleteUni from \"./AutocompletUni.js\";\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst axios = require('axios');\n\nconst utsmajors = [\"A\",\"AcB\",\"C\",\"Adult Education\"];\nconst unis = [\"USYD\",\"UNSW\",\"UTS\"];\nconst Countries = [\n    { label: \"Albania\", value: 355 },\n    { label: \"Argentina\", value: 54 },\n    { label: \"Austria\", value: 43 },\n    { label: \"Cocos Islands\", value: 61 },\n    { label: \"Kuwait\", value: 965 },\n    { label: \"Sweden\", value: 46 },\n    { label: \"Venezuela\", value: 58 }\n];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            studentname: '',\n            phonenumber: '',\n            searchname: '',\n            majorname:'',\n            uniname: '',\n            selectedOption:null,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        //this.handleSubmit = this.handleSubmit.bind(this);\n        this.axiosPostData = this.axiosPostData.bind(this);\n        this.fetchGetData = this.fetchGetData.bind(this);\n\n    }\n    /*\n    getFromChild = (value) => {\n        this.setState({majorname:value})\n    }*/\n    //Used to find specific value according to users' input\n    //Somehow ios cant send or retrieve info using fetch/axios\n    fetchGetData = (event) => {\n\n        event.preventDefault();\n        console.log(event.target.majorname.value+\" major is\");\n        console.log(event.target.uniname.value+\" uni is\");\n        console.log(\"this state majorname is \"+ this.state.majorname);\n        console.log(\"major is in state of \"+this.state.majorname);\n        //Also Note that majorname as a selected result that sent from auto complete\n        //can not be saved into state of App somehow\n        //192.168.1.104 as localhost address\n        fetch(\"http://192.168.1.104:5000/search/\" + event.target.majorname.value)\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    //element can be obatined through res[0].elementname\n                    //since res is represented as array there\n                    if(res.length == 0){\n                        console.log(\"no such data in database, check your input please\");\n                    }else{\n                        console.log(\"course array length is\"+res.length);\n\n                    }\n                    for (var i = 0; i < res.length; i++) {\n                        //dont wanna alert jump out too many times :D\n                        //show courses\n                        alert(res[i].course);// but this can be used for testing ~\n                        console.log(\"courses are:\" + res[i].course)\n                    }\n\n                    console.log(\"doing frontend fetching\");\n                },\n                // Note: it's important to handle errors here\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    };\n\n\n    axiosPostData = (event) => {\n        //  event.preventDefault(); is used to prevent frontend real actions\n        //  (in this case :to refresh itself automatically when changes are made)\n        event.preventDefault();\n        //this.setState({[event.target.name]:event.target.value});\n        //console.log(this.state.searchname);\n        axios.post('http://192.168.1.104:5000/test', {\n            studentname: this.state.studentname,\n            phonenumber: this.state.phonenumber,\n        })\n            .then(function (response) {\n                console.log(response);\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        alert('A name was submitted: ' + this.state.studentname + '  phone number is' + this.state.phonenumber);\n\n    }\n    handleSelectChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    handleChange(event) {\n        //prevent may not needed?\n        //event.preventDefault();\n        //value: event.target.value\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    /*\n        handleSubmit(event) {\n            event.preventDefault();\n            //alert('A name was submitted: ' + this.state.studentname+ 'age is'+this.state.phonenumber);\n            alert(\"yiha\");\n        }\n    */\n\n    render() {\n        let header = '';\n        //const { selectedOption } = this.state.selectedOption;\n\n        return (\n\n            <div className=\"App\">\n                <form onSubmit={this.fetchGetData}>\n                    <label>You want to search this major :</label>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                    <Select options={Countries} onChange={this.handleSelectChange}/>\n\n                                </div>\n                            <div className=\"col-md-4\"></div>\n                        </div>\n                    </div>\n                    <AutocompleteUni\n                        suggestions={unis}\n                    />\n                    <Autocomplete\n                        suggestions={utsmajors}\n                    />\n                    <input type=\"submit\" value=\"getData\"/>\n\n                </form>\n\n                <form onSubmit={this.axiosPostData}>\n                    <label>Enter your student name:</label>\n                    <input\n                        type='text'\n                        name='studentname'\n                        value={this.state.studentname}\n                        onChange={this.handleChange}\n                    />\n                    <label>Enter your phone number:</label>\n                    <input\n                        type='text'\n                        name='phonenumber'\n                        value={this.state.phonenumber}\n                        onChange={this.handleChange}\n                    />\n                    <input type=\"submit\" value=\"Submit\"/>\n\n                </form>\n                <h1>Click below to pop up </h1>\n                <Popup modal trigger={<button>Click Me</button>}>\n                    {close => <Content close={close}/>}\n                </Popup>\n\n\n\n\n            </div>\n\n        )\n    }\n\n    /*\n    handleClick(){\n        window.open(\"/MyScreen\");\n    }\n     */\n\n\n}\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nexport default App"]},"metadata":{},"sourceType":"module"}